% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NormalizedLaplacian.R
\name{NormalizedLaplacian}
\alias{NormalizedLaplacian}
\alias{transform,NormalizedLaplacian,sparseMatrix-method}
\alias{inverse_transform,NormalizedLaplacian,sparseMatrix-method}
\title{Construct and use NormalizedLaplacian transformation}
\usage{
NormalizedLaplacian(A)

\S4method{transform}{NormalizedLaplacian,sparseMatrix}(iform, A)

\S4method{inverse_transform}{NormalizedLaplacian,sparseMatrix}(iform, A)
}
\arguments{
\item{A}{A matrix to transform.}

\item{iform}{An \linkS4class{Invertiform} object describing the transformation.}
}
\value{
\itemize{
\item \code{NormalizedLaplacian()} creates a \linkS4class{NormalizedLaplacian} object.
\item \code{transform()} returns the transformed matrix,
typically as a \linkS4class{Matrix}.
\item \code{inverse_transform()} returns the inverse transformed matrix,
typically as a \linkS4class{Matrix}.
}
}
\description{
A convenience function to create \linkS4class{NormalizedLaplacian} S4 objects,
which are useful for finding the normalized Laplacian of the
adjacency matrix of a graph.
}
\details{
We define the \emph{normalized Laplacian} \eqn{L(A)} of a graph adjacency matrix
as

\deqn{
  L(A)[ij] = \frac{A[ij]}{\sqrt{d[i]} \sqrt{d[j]}}
}{
  L_ij = A_ij / sqrt(d^in_i d^out_j)
}
}
\examples{

library(igraph)
library(igraphdata)

data("karate", package = "igraphdata")

A <- get.adjacency(karate)

iform <- NormalizedLaplacian(A)

L <- transform(iform, A)
A_recovered <- inverse_transform(iform, L)

all.equal(A, A_recovered)

}
